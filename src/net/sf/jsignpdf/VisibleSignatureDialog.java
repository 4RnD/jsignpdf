
package net.sf.jsignpdf;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;

/**
 * Options dialog fr Visible signature settings
 * @author  Josef Cacek
 */
public class VisibleSignatureDialog extends javax.swing.JDialog {

	private static final long serialVersionUID = 1L;

	protected final ResourceProvider res = ResourceProvider.getInstance();

	private SignerOptions options;

	/** Creates new form VisibleSignatureDialog */
	public VisibleSignatureDialog(java.awt.Frame parent, boolean modal, final SignerOptions anOptions) {
		super(parent, modal);
		options = anOptions;
		initComponents();
		translateLabels();
		cbDisplayMode.setModel(new DefaultComboBoxModel(RenderMode.values()));
	}

	private void translateLabels() {
		// TODO Auto-generated method stub

	}

	/**
	 * Loads properties saved by previous run of application
	 */
	private void updateFromOptions() {
		//TODO impl
//		pack();
	}

	/**
	 * stores values from this Form to the instance of {@link SignerOptions}
	 */
	private void storeToOptions() {
		//TODO impl
	}

	private void setLabelAndMnemonic(final JComponent aComponent, final String aKey) {
		res.setLabelAndMnemonic(aComponent, aKey);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		lblPosition = new javax.swing.JLabel();
		lblPage = new javax.swing.JLabel();
		tfPage = new javax.swing.JTextField();
		lblPosLLX = new javax.swing.JLabel();
		tfPosLLX = new javax.swing.JTextField();
		lblPosLLY = new javax.swing.JLabel();
		tfPosLLY = new javax.swing.JTextField();
		lblPosURX = new javax.swing.JLabel();
		tfPosURX = new javax.swing.JTextField();
		lblPosURY = new javax.swing.JLabel();
		tfPosURY = new javax.swing.JTextField();
		lblSettings = new javax.swing.JLabel();
		lblDisplayMode = new javax.swing.JLabel();
		cbDisplayMode = new javax.swing.JComboBox();
		lblL2Text = new javax.swing.JLabel();
		tfL2Text = new javax.swing.JTextField();
		chkbL2TextDefault = new javax.swing.JCheckBox();
		lblL4Text = new javax.swing.JLabel();
		tfL4Text = new javax.swing.JTextField();
		chkbL4TextDefault = new javax.swing.JCheckBox();
		lblImgPath = new javax.swing.JLabel();
		tfImgPath = new javax.swing.JTextField();
		btnImgPathBrowse = new javax.swing.JButton();
		lblBgImgPath = new javax.swing.JLabel();
		tfBgImgPath = new javax.swing.JTextField();
		btnBgImgPathBrowse = new javax.swing.JButton();
		lblBgImgScale = new javax.swing.JLabel();
		tfBgImgScale = new javax.swing.JTextField();
		btnClose = new javax.swing.JButton();

		getContentPane().setLayout(new java.awt.GridBagLayout());

		addComponentListener(new java.awt.event.ComponentAdapter() {
			public void componentHidden(java.awt.event.ComponentEvent evt) {
				formComponentHidden(evt);
			}
			public void componentShown(java.awt.event.ComponentEvent evt) {
				formComponentShown(evt);
			}
		});

		lblPosition.setText("Position");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
		getContentPane().add(lblPosition, gridBagConstraints);

		lblPage.setLabelFor(lblPage);
		lblPage.setText("Page");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(lblPage, gridBagConstraints);

		tfPage.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		tfPage.setText("1");
		tfPage.setMinimumSize(new java.awt.Dimension(70, 20));
		tfPage.setPreferredSize(new java.awt.Dimension(70, 20));
		tfPage.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tfPageActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(tfPage, gridBagConstraints);

		lblPosLLX.setLabelFor(tfPosLLX);
		lblPosLLX.setText("Lower Left X");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(lblPosLLX, gridBagConstraints);

		tfPosLLX.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		tfPosLLX.setText("0.0");
		tfPosLLX.setMinimumSize(new java.awt.Dimension(70, 20));
		tfPosLLX.setPreferredSize(new java.awt.Dimension(70, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(tfPosLLX, gridBagConstraints);

		lblPosLLY.setLabelFor(tfPosLLY);
		lblPosLLY.setText("Lower Left Y");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(lblPosLLY, gridBagConstraints);

		tfPosLLY.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		tfPosLLY.setText("0.0");
		tfPosLLY.setMinimumSize(new java.awt.Dimension(70, 20));
		tfPosLLY.setPreferredSize(new java.awt.Dimension(70, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(tfPosLLY, gridBagConstraints);

		lblPosURX.setLabelFor(tfPosURX);
		lblPosURX.setText("Upper Right X");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(lblPosURX, gridBagConstraints);

		tfPosURX.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		tfPosURX.setText("100.0");
		tfPosURX.setMinimumSize(new java.awt.Dimension(70, 20));
		tfPosURX.setPreferredSize(new java.awt.Dimension(70, 20));
		tfPosURX.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				tfPosURXActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(tfPosURX, gridBagConstraints);

		lblPosURY.setLabelFor(tfPosURY);
		lblPosURY.setText("Upper Right Y");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(lblPosURY, gridBagConstraints);

		tfPosURY.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		tfPosURY.setText("100.0");
		tfPosURY.setMinimumSize(new java.awt.Dimension(70, 20));
		tfPosURY.setPreferredSize(new java.awt.Dimension(70, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(tfPosURY, gridBagConstraints);

		lblSettings.setText("Settings");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
		getContentPane().add(lblSettings, gridBagConstraints);

		lblDisplayMode.setLabelFor(cbDisplayMode);
		lblDisplayMode.setText("Display");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 5);
		getContentPane().add(lblDisplayMode, gridBagConstraints);

		cbDisplayMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
		cbDisplayMode.setMinimumSize(new java.awt.Dimension(200, 20));
		cbDisplayMode.setPreferredSize(new java.awt.Dimension(200, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(cbDisplayMode, gridBagConstraints);

		lblL2Text.setLabelFor(tfL2Text);
		lblL2Text.setText("Signature text");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 5);
		getContentPane().add(lblL2Text, gridBagConstraints);

		tfL2Text.setMinimumSize(new java.awt.Dimension(200, 20));
		tfL2Text.setPreferredSize(new java.awt.Dimension(200, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(tfL2Text, gridBagConstraints);

		chkbL2TextDefault.setText("Default");
		chkbL2TextDefault.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
		chkbL2TextDefault.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
		getContentPane().add(chkbL2TextDefault, gridBagConstraints);

		lblL4Text.setLabelFor(tfL4Text);
		lblL4Text.setText("Status text");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 5);
		getContentPane().add(lblL4Text, gridBagConstraints);

		tfL4Text.setMinimumSize(new java.awt.Dimension(200, 20));
		tfL4Text.setPreferredSize(new java.awt.Dimension(200, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(tfL4Text, gridBagConstraints);

		chkbL4TextDefault.setText("Default");
		chkbL4TextDefault.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
		chkbL4TextDefault.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
		getContentPane().add(chkbL4TextDefault, gridBagConstraints);

		lblImgPath.setLabelFor(tfImgPath);
		lblImgPath.setText("Image");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 5);
		getContentPane().add(lblImgPath, gridBagConstraints);

		tfImgPath.setMinimumSize(new java.awt.Dimension(200, 20));
		tfImgPath.setPreferredSize(new java.awt.Dimension(200, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(tfImgPath, gridBagConstraints);

		btnImgPathBrowse.setText("Browse");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
		getContentPane().add(btnImgPathBrowse, gridBagConstraints);

		lblBgImgPath.setLabelFor(tfBgImgPath);
		lblBgImgPath.setText("Background image");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 10, 2, 5);
		getContentPane().add(lblBgImgPath, gridBagConstraints);

		tfBgImgPath.setMinimumSize(new java.awt.Dimension(200, 20));
		tfBgImgPath.setPreferredSize(new java.awt.Dimension(200, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(tfBgImgPath, gridBagConstraints);

		btnBgImgPathBrowse.setText("Browse");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
		getContentPane().add(btnBgImgPathBrowse, gridBagConstraints);

		lblBgImgScale.setLabelFor(tfBgImgScale);
		lblBgImgScale.setText("Background image scale");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(lblBgImgScale, gridBagConstraints);

		tfBgImgScale.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		tfBgImgScale.setText("-1.0");
		tfBgImgScale.setMinimumSize(new java.awt.Dimension(70, 20));
		tfBgImgScale.setPreferredSize(new java.awt.Dimension(70, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		getContentPane().add(tfBgImgScale, gridBagConstraints);

		btnClose.setText("Close");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 5, 2);
		getContentPane().add(btnClose, gridBagConstraints);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
		storeToOptions();
	}//GEN-LAST:event_formComponentHidden

	private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
		updateFromOptions();
	}//GEN-LAST:event_formComponentShown

	private void tfPosURXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPosURXActionPerformed
//		TODO add your handling code here:
	}//GEN-LAST:event_tfPosURXActionPerformed

	private void tfPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPageActionPerformed
//		TODO add your handling code here:
	}//GEN-LAST:event_tfPageActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnBgImgPathBrowse;
	private javax.swing.JButton btnClose;
	private javax.swing.JButton btnImgPathBrowse;
	private javax.swing.JComboBox cbDisplayMode;
	private javax.swing.JCheckBox chkbL2TextDefault;
	private javax.swing.JCheckBox chkbL4TextDefault;
	private javax.swing.JLabel lblBgImgPath;
	private javax.swing.JLabel lblBgImgScale;
	private javax.swing.JLabel lblDisplayMode;
	private javax.swing.JLabel lblImgPath;
	private javax.swing.JLabel lblL2Text;
	private javax.swing.JLabel lblL4Text;
	private javax.swing.JLabel lblPage;
	private javax.swing.JLabel lblPosLLX;
	private javax.swing.JLabel lblPosLLY;
	private javax.swing.JLabel lblPosURX;
	private javax.swing.JLabel lblPosURY;
	private javax.swing.JLabel lblPosition;
	private javax.swing.JLabel lblSettings;
	private javax.swing.JTextField tfBgImgPath;
	private javax.swing.JTextField tfBgImgScale;
	private javax.swing.JTextField tfImgPath;
	private javax.swing.JTextField tfL2Text;
	private javax.swing.JTextField tfL4Text;
	private javax.swing.JTextField tfPage;
	private javax.swing.JTextField tfPosLLX;
	private javax.swing.JTextField tfPosLLY;
	private javax.swing.JTextField tfPosURX;
	private javax.swing.JTextField tfPosURY;
	// End of variables declaration//GEN-END:variables

}
