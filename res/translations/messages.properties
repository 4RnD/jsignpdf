
certificationLevel.formFill      = Form filling allowed
certificationLevel.formFillAnnot = Form filling and annotations allowed
certificationLevel.noChanges     = No changes allowed
certificationLevel.notCertified  = Not certified

console.createOutPdf    = Creating output PDF file: {0}
console.createPdfReader = Opening input PDF file: {0}
console.createSignature = Creating signature
console.exception       = Problem occured
console.finished.error  = Finished: Creating of signature failed.
console.finished.ok     = Finished: Signature succesfully created.
console.getAliases      = Getting key alias
console.getCertChain    = Getting certificate chain
console.getKeystoreType = Getting keystore type instance: {0}
console.getPrivateKey   = Loading private key
console.loadKeystore    = Loading keystore: {0}
console.memoryError     = \r\nJava is out of memory. Try to allow more memory to your JVM.\r\nAdd parameter -Xmx<size> to your java call.\r\ne.g. $java -Xmx512m  ... sets maximum Java heap size to 512MB.\r\n
console.processing      = Processing (it may take a while) ...
console.setLocation     = Setting location: {0}
console.setReason       = Setting reason: {0}
console.starting        = Starting PDF Signer

filechooser.overwrite.question = File "{0}" already exists. Do you want to overwrite it?
filechooser.save.warning       = Save warning

filefilter.jks    = Java Keystore Files (.jks)
filefilter.pdf    = PDF Files (.pdf)
filefilter.pkcs12 = PKCS#12 files (.pfx, .p12)

gui.browse.button          = Browse ...
gui.check.error.title      = Check failed
gui.fileNotExists.error    = {0} doesn''t exist or it is not readable.
gui.filesEqual.error       = Input and Output PDF files are equal.
gui.inPdfFile.label        = &Input PDF file
gui.info.close.button      = Close
gui.info.title             = JSignPdf Output Console
gui.keystoreFile.label     = &Keystore file
gui.keystorePassword.label = Keystore &password
gui.keystoreType.label     = Keystore &type
gui.location.label         = &Location
gui.outPdfFile.label       = &Output PDF file
gui.reason.label           = &Reason
gui.signIt.button          = &Sign It
gui.title                  = JSignPdf (version {0})
gui.valueNotFilled.error   = {0} has to be filled.
